import video_merger
import os
import subprocess
import time
import questionary
from questionary import Style

# –°–æ–∑–¥–∞–µ–º —Å—Ç–∏–ª—å –¥–ª—è questionary
custom_style = Style([
    ('question', 'fg:#0066ff bold'),
    ('answer', 'fg:#00cc00 bold'),
    ('pointer', 'fg:#ff3300 bold'),
    ('highlighted', 'fg:#00cc00 bold'),
    ('selected', 'fg:#00cc00 bold'),
    ('separator', 'fg:#0066ff'),
    ('instruction', 'fg:#0066ff'),
    ('text', 'fg:#ffffff'),
])

def check_ffmpeg():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è FFmpeg –≤ —Å–∏—Å—Ç–µ–º–µ"""
    try:
        result = subprocess.run(['ffmpeg', '-version'], capture_output=True, text=True)
        print("‚úì FFmpeg –Ω–∞–π–¥–µ–Ω:", result.stdout.split('\n')[0])
        return True
    except FileNotFoundError:
        return False

def list_video_files(directory):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"""
    video_extensions = ('.mp4', '.mov', '.avi', '.MP4', '.MOV', '.AVI')
    files = []
    for file in os.listdir(directory):
        if any(file.endswith(ext) for ext in video_extensions) and file.lower() != "ending.mp4":
            files.append(file)
    return sorted(files)

def print_separator():
    print("\n" + "‚îÄ" * 70 + "\n")

def format_time(seconds):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥"""
    hours = seconds // 3600
    minutes = (seconds % 3600) // 60
    seconds = seconds % 60
    if hours > 0:
        return f"{int(hours)}—á {int(minutes)}–º {int(seconds)}—Å"
    elif minutes > 0:
        return f"{int(minutes)}–º {int(seconds)}—Å"
    else:
        return f"{int(seconds)}—Å"

def show_help():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    while True:
        print("\n" + "‚ïê" * 70)
        print("‚ïë" + " " * 28 + "–°–ü–†–ê–í–ö–ê" + " " * 34 + "‚ïë")
        print("‚ïê" * 70)

        help_section = questionary.select(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª —Å–ø—Ä–∞–≤–∫–∏:",
            choices=[
                "üìù –û–±—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
                "üõ†Ô∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ä–∞–±–æ—Ç–µ",
                "üìã –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã",
                "‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è",
                "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã",
                "‚å®Ô∏è –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏",
                "‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
            ],
            style=custom_style
        ).ask()

        if help_section == "üìù –û–±—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ":
            print("\n" + "‚îÄ" * 70)
            print("üìù –û–ë–©–ï–ï –û–ü–ò–°–ê–ù–ò–ï")
            print("‚îÄ" * 70)
            print("–ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ü–æ–≤–∫–∏")
            print("–∫ –≤–∏–¥–µ–æ—Ä–æ–ª–∏–∫–∞–º. –û–Ω–∞ –º–æ–∂–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å—Ä–∞–∑—É –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∏–¥–µ–æ,")
            print("–¥–æ–±–∞–≤–ª—è—è –∫ –∫–∞–∂–¥–æ–º—É —É–∫–∞–∑–∞–Ω–Ω—É—é –∫–æ–Ω—Ü–æ–≤–∫—É.")
            print("\n–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:")
            print("‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ü–æ–≤–∫–∏ –ø–æ–¥ —Ä–∞–∑–º–µ—Ä –≤–∏–¥–µ–æ")
            print("‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –≤–∏–¥–µ–æ")
            print("‚Ä¢ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã")
            print("‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤ –≤–∏–¥–µ–æ")

        elif help_section == "üõ†Ô∏è –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Ä–∞–±–æ—Ç–µ":
            print("\n" + "‚îÄ" * 70)
            print("üõ†Ô∏è –ü–û–î–ì–û–¢–û–í–ö–ê –ö –†–ê–ë–û–¢–ï")
            print("‚îÄ" * 70)
            print("1. –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Ñ–∞–π–ª—ã:")
            print("   ‚Ä¢ –ü–æ–º–µ—Å—Ç–∏—Ç–µ –≤–∏–¥–µ–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ –ø–∞–ø–∫—É —Å–æ —Å–∫—Ä–∏–ø—Ç–æ–º")
            print("   ‚Ä¢ –ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª –∫–æ–Ω—Ü–æ–≤–∫–∏ (ending.mp4) –≤ —Ç—É –∂–µ –ø–∞–ø–∫—É")
            print("\n2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω FFmpeg")
            print("\n3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º")

        elif help_section == "üìã –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã":
            print("\n" + "‚îÄ" * 70)
            print("üìã –ü–û–î–î–ï–†–ñ–ò–í–ê–ï–ú–´–ï –§–û–†–ú–ê–¢–´")
            print("‚îÄ" * 70)
            print("–í–∏–¥–µ–æ —Ñ–∞–π–ª—ã:")
            print("‚Ä¢ MP4 (.mp4)")
            print("‚Ä¢ MOV (.mov)")
            print("‚Ä¢ AVI (.avi)")
            print("\n–§–∞–π–ª –∫–æ–Ω—Ü–æ–≤–∫–∏:")
            print("‚Ä¢ –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ MP4")
            print("‚Ä¢ –î–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –∏–º—è 'ending.mp4'")

        elif help_section == "‚ö†Ô∏è –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è":
            print("\n" + "‚îÄ" * 70)
            print("‚ö†Ô∏è –û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø")
            print("‚îÄ" * 70)
            print("‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ: 100")
            print("‚Ä¢ –ò–º—è —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ü–æ–≤–∫–∏: —Å—Ç—Ä–æ–≥–æ 'ending.mp4'")
            print("‚Ä¢ –¢—Ä–µ–±—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π FFmpeg")
            print("‚Ä¢ –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ")
            print("  (–ø—Ä–∏–º–µ—Ä–Ω–æ –≤ 3 —Ä–∞–∑–∞ –±–æ–ª—å—à–µ —Ä–∞–∑–º–µ—Ä–∞ –∏—Å—Ö–æ–¥–Ω—ã—Ö –≤–∏–¥–µ–æ)")

        elif help_section == "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞–±–æ—Ç—ã":
            print("\n" + "‚îÄ" * 70)
            print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –†–ê–ë–û–¢–´")
            print("‚îÄ" * 70)
            print("‚Ä¢ –°–æ–∑–¥–∞–µ—Ç—Å—è –ø–∞–ø–∫–∞ 'output' –¥–ª—è –≥–æ—Ç–æ–≤—ã—Ö –≤–∏–¥–µ–æ")
            print("‚Ä¢ –ò–º–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: merged_[–∏—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è]")
            print("‚Ä¢ –°–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ")
            print("‚Ä¢ –ö–æ–Ω—Ü–æ–≤–∫–∞ –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ —Ä–∞–∑–º–µ—Ä –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≤–∏–¥–µ–æ")
            print("‚Ä¢ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏")

        elif help_section == "‚å®Ô∏è –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏":
            print("\n" + "‚îÄ" * 70)
            print("‚å®Ô∏è –ì–û–†–Ø–ß–ò–ï –ö–õ–ê–í–ò–®–ò")
            print("‚îÄ" * 70)
            print("‚Üë/‚Üì     - –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –º–µ–Ω—é")
            print("Enter   - –í—ã–±–æ—Ä –ø—É–Ω–∫—Ç–∞ –º–µ–Ω—é")
            print("Esc     - –í–æ–∑–≤—Ä–∞—Ç/–û—Ç–º–µ–Ω–∞")
            print("Q       - –í—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã")

        else:  # –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            break

        print("\n" + "‚îÄ" * 70)
        if not questionary.confirm(
            "–ü–æ–∫–∞–∑–∞—Ç—å –¥—Ä—É–≥–æ–π —Ä–∞–∑–¥–µ–ª —Å–ø—Ä–∞–≤–∫–∏?",
            default=True,
            style=custom_style
        ).ask():
            break

def show_welcome():
    """–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω"""
    print("\n" + "‚ïê" * 70)
    print("‚ïë" + " " * 24 + "–í–ò–î–ï–û –ü–†–û–¶–ï–°–°–û–† v2.0" + " " * 24 + "‚ïë")
    print("‚ïê" * 70)

def main():
    try:
        show_welcome()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ FFmpeg
        if not check_ffmpeg():
            print("\n‚ùå –û–®–ò–ë–ö–ê: FFmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            if questionary.confirm(
                "–•–æ—Ç–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å FFmpeg?",
                default=True,
                style=custom_style
            ).ask():
                # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É FFmpeg
                print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫–∞—á–∞–π—Ç–µ FFmpeg —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞: https://ffmpeg.org/download.html")
            return

        # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å–∫—Ä–∏–ø—Ç–∞
        script_dir = os.path.dirname(os.path.abspath(__file__))
        input_videos_dir = script_dir
        ending_video_path = os.path.join(script_dir, "ending.mp4")
        output_videos_dir = os.path.join(script_dir, "output")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ ending.mp4
        if not os.path.exists(ending_video_path):
            print("\n‚ùå –§–∞–π–ª 'ending.mp4' –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ
        videos = list_video_files(input_videos_dir)
        if not videos:
            print("\n‚ùå –í –ø–∞–ø–∫–µ –Ω–µ—Ç –≤–∏–¥–µ–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏!")
            return

        if len(videos) > 100:
            print("\n‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –≤–∏–¥–µ–æ (–º–∞–∫—Å–∏–º—É–º 100)!")
            return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö
        print("\nüìÅ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:", script_dir)
        print(f"\nüìΩÔ∏è –ù–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ ({len(videos)}):")
        for i, video in enumerate(videos, 1):
            print(f"   {i}. {video}")

        print_separator()

        while True:
            action = questionary.select(
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                choices=[
                    "‚ú® –ù–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É",
                    "üìñ –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É",
                    "‚ùå –í—ã–π—Ç–∏"
                ],
                style=custom_style
            ).ask()

            if action == "‚ú® –ù–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É":
                # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
                print("\nüìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
                print(f"   ‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ: {len(videos)}")
                print(f"   ‚Ä¢ –ö–æ–Ω—Ü–æ–≤–∫–∞: ending.mp4")
                print(f"   ‚Ä¢ –ü–∞–ø–∫–∞ –¥–ª—è –≥–æ—Ç–æ–≤—ã—Ö –≤–∏–¥–µ–æ: {os.path.basename(output_videos_dir)}")
                
                if questionary.confirm(
                    "\n–ù–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∏–¥–µ–æ?",
                    default=True,
                    style=custom_style
                ).ask():
                    print("\nüé¨ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –≤–∏–¥–µ–æ...")
                    start_time = time.time()
                    
                    video_merger.add_ending_to_videos(input_videos_dir, ending_video_path, output_videos_dir)
                    
                    total_time = time.time() - start_time
                    print_separator()
                    print(f"‚ú® –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                    print(f"‚è±Ô∏è –û–±—â–µ–µ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {format_time(total_time)}")
                    print(f"üìÅ –ì–æ—Ç–æ–≤—ã–µ –≤–∏–¥–µ–æ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø–∞–ø–∫–µ: {output_videos_dir}")
                    break
            
            elif action == "üìñ –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É":
                show_help()
            
            else:  # –í—ã—Ö–æ–¥
                print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                return

    except Exception as e:
        print(f"\n‚ùå –û–®–ò–ë–ö–ê: {str(e)}")
        print("\n–ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ—à–∏–±–∫–∏:")
        import traceback
        print(traceback.format_exc())

    print_separator()
    input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

if __name__ == "__main__":
    main() 